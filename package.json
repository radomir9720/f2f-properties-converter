{
  "name": "f2f-properties-converter",
  "displayName": "Figma to Flutter Properties Converter",
  "description": "Converts Colors, TextStyles, BorderRadius, etc. from Figma to Flutter format",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.66.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/radomir9720/f2f-properties-converter"
  },
  "bugs": "https://github.com/radomir9720/f2f-properties-converter/issues",
  "galleryBanner": {
    "color": "#D4CB79",
    "theme": "light"
  },
  "icon": "doc/images/logo.png",
  "publisher": "radomir9720",
  "homepage": "https://repur.dev",
  "license": "MIT",
  "keywords": [
    "figma",
    "flutter",
    "converter",
    "convert",
    "parameter",
    "parameters",
    "property",
    "properties",
    "text style",
    "border radius",
    "color"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:dart",
    "workspaceContains:**/*.dart"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "f2f-properties-conveter.covertFromClipboard",
        "category": "Figma to Flutter",
        "title": "Convert Parameter from clipboard"
      },
      {
        "command": "f2f-properties-conveter.covertFromSelection",
        "category": "Figma to Flutter",
        "title": "Convert Parameter from selection"
      }
    ],
    "keybindings": [
      {
        "command": "f2f-properties-conveter.covertFromClipboard",
        "key": "ctrl+shift+f",
        "mac": "cmd+shift+f",
        "when": "editorTextFocus"
      },
      {
        "command": "f2f-properties-conveter.covertFromSelection",
        "key": "ctrl+shift+g",
        "mac": "cmd+shift+g",
        "when": "editorTextFocus"
      }
    ],
    "configuration": {
      "title": "Figma to Flutter Properties Converter",
      "properties": {
        "f2f-properties-conveter.color.wrapColorInClass": {
          "type": "boolean",
          "default": true,
          "title": "Wrap color in Color class",
          "markdownDescription": "Whether to wrap color in `Color` class(`const Color(0xFFFFFFFF)`), or not(`0xFFFFFFFF`)"
        },
        "f2f-properties-conveter.textStyle.wrapTextStyleInClass": {
          "type": "boolean",
          "default": true,
          "title": "Wrap text style in TextStyle class",
          "markdownDescription": "Whether to wrap text style in `TextStyle` class(`const TextStyle(fontSize: 12...)`), or not(`fontSize: 12...`)"
        },
        "f2f-properties-conveter.textStyle.fontFamilyQuotes": {
          "type": "string",
          "enum": [
            "double",
            "single",
            "none"
          ],
          "default": "single",
          "title": "Type of quotes to wrap the font family in",
          "markdownDescription": "double: `fontFamily: \"roboto\"` | single: `fontFamily: 'roboto'` | none: `fontFamily: roboto`"
        },
        "f2f-properties-conveter.textStyle.pasteFontStyleNormalWhenItsUndefined": {
          "type": "boolean",
          "default": true,
          "title": "Paste normal font style if it's not defined",
          "markdownDescription": "Paste `fontStyle: FontStyle.normal` if there is no `font-style` property"
        },
        "f2f-properties-conveter.textStyle.pasteZeroLetterSpacingWhenItsUndefined": {
          "type": "boolean",
          "default": false,
          "title": "Paste letter spacing if it's not defined or zero",
          "markdownDescription": "Paste `spacing: 0` if there is no `letter-spacing` property, or it equals to zero"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@types/vscode": "^1.66.0",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "@vscode/test-electron": "^2.3.2",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.3",
    "typescript": "^5.1.3",
    "webpack": "^5.85.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "clipboardy": "^3.0.0"
  }
}
